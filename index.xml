<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dragonfly</title><link>https://attos-io.github.io/</link><description>Recent content on Dragonfly</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 20 Feb 2022 21:29:20 +0200</lastBuildDate><atom:link href="https://attos-io.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Control plane Team Lead</title><link>https://attos-io.github.io/careers/golang-team-lead/</link><pubDate>Sun, 20 Feb 2022 21:29:20 +0200</pubDate><guid>https://attos-io.github.io/careers/golang-team-lead/</guid><description>Responsibilities:
As a team leader you will help introduce and guide work methodologies, technologies, mentor and ramp up new developers, and be the go-to person in the areas you are an expert at. Lead the GO developers team and work closely with the Cloud Team leader. Writing technical design docs, tracking tasks and deadlines, help and troubleshooting The Go developer tech lead will stay hands on and develop 60% of his position.</description></item><item><title>Redis Analysis - Part 2: Simplicity</title><link>https://attos-io.github.io/blog/2022/01/30/simple_is_beatiful/</link><pubDate>Sun, 30 Jan 2022 20:00:00 +0200</pubDate><guid>https://attos-io.github.io/blog/2022/01/30/simple_is_beatiful/</guid><description>&lt;p>Let&amp;rsquo;s talk about the simplicity of Redis.
Redis was initially designed as a simple store, and it seems that its APIs achieved this goal.
Unfortunately, Redis&amp;rsquo;s simple design makes it unreliable and difficult to manage in production.&lt;/p>
&lt;p>So the question is - what simplicity means to you as a datastore user?&lt;/p></description></item><item><title>Redis Analysis - Part 1: Threading model</title><link>https://attos-io.github.io/blog/2021/12/09/single_threaded_redis/</link><pubDate>Thu, 09 Dec 2021 11:00:00 +0300</pubDate><guid>https://attos-io.github.io/blog/2021/12/09/single_threaded_redis/</guid><description>&lt;p>Following my previous post, we are going start with the &amp;ldquo;hottest potato&amp;rdquo; - single-threaded vs
multi-threaded argument.&lt;/p></description></item><item><title>A prelude to analysis of Redis memory-store</title><link>https://attos-io.github.io/blog/2021/11/28/redis_analysis/</link><pubDate>Sun, 28 Nov 2021 17:46:19 +0300</pubDate><guid>https://attos-io.github.io/blog/2021/11/28/redis_analysis/</guid><description>&lt;p>During the last 13 years, Redis has become a truly ubiquitous memory store that has won the hearts
of numerous dev-ops and software engineers. Indeed, according to &lt;a href="https://insights.stackoverflow.com/survey/2021#databases">StackOverflow survey in
2021&lt;/a>, Redis is the most loved database for the 5th time in a row and is at the top of
&lt;a href="https://db-engines.com/en/ranking/key-value+store">db-engines&lt;/a> ranking, way before the next contestant.
But how well does Redis utilizes modern hardware systems?
Will it stay competitive in a few years without reinventing itself?&lt;/p></description></item><item><title>Categories Post</title><link>https://attos-io.github.io/careers/senior-cpp-eng/</link><pubDate>Sun, 01 Aug 2021 21:29:20 +0200</pubDate><guid>https://attos-io.github.io/careers/senior-cpp-eng/</guid><description>I&amp;rsquo;m a post with multiple categories in the frontmatter:
categories = [&amp;quot;programming&amp;quot;,&amp;quot;lorem&amp;quot;,&amp;quot;pseudo&amp;quot;] Lorem ipsum dolor sit amet, consectetur adipiscing elit. In mauris nulla, vestibulum vel auctor sed, posuere eu lorem. Aliquam consequat augue ut accumsan mollis. Suspendisse malesuada sodales tincidunt. Vivamus sed erat ac augue bibendum porta sed id ipsum. Ut mollis mauris eget ligula sagittis cursus. Aliquam id pharetra tellus. Pellentesque sed tempus risus. Proin id hendrerit ante. Vestibulum vitae urna ut mauris ultricies dignissim.</description></item><item><title>FAQ</title><link>https://attos-io.github.io/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://attos-io.github.io/faq/</guid><description>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.
1. WHAT TO DO IF I HAVE STILL NOT RECEIVED THE ORDER? Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante.</description></item><item><title>Get Started</title><link>https://attos-io.github.io/get_started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://attos-io.github.io/get_started/</guid><description>Get Started With Dragonfly Dragonfly is a fully functional, production grade in-memory datastore drop-in replacment for both Redis and Memcached. It enjoys the memcached throughput power and the richness of Redis APIs and consistency grunties. Dragonfly supports both Memcached and Redis APIs with minor modifications. There is absulotly zero change to your client implementation. All you need to do is just to replace the datastore engine.
License text text
Docker install text text text docker pull dragonfly</description></item><item><title>Git Access</title><link>https://attos-io.github.io/git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://attos-io.github.io/git/</guid><description>Should we make dragonfly source available? We are thinking of making dragonfly source available so the community will be able to participate in dragonfly and contribute to its code, documentation, issues and roadmap. However this decision was not made as of yet. If you feel strongly either way please share your thoughts with us.</description></item></channel></rss>