<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dragonfly</title><link>https://www.dragonflydb.io/</link><description>Recent content on Dragonfly</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 30 Jan 2022 20:00:00 +0200</lastBuildDate><atom:link href="https://www.dragonflydb.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Redis Analysis - Part 2: Simplicity</title><link>https://www.dragonflydb.io/blog/2022/01/30/simple_is_beatiful/</link><pubDate>Sun, 30 Jan 2022 20:00:00 +0200</pubDate><guid>https://www.dragonflydb.io/blog/2022/01/30/simple_is_beatiful/</guid><description>&lt;p>Let&amp;rsquo;s talk about the simplicity of Redis.
Redis was initially designed as a simple store, and it seems that its APIs achieved this goal.
Unfortunately, Redis&amp;rsquo;s simple design makes it unreliable and difficult to manage in production.&lt;/p>
&lt;p>So the question is - what simplicity means to you as a datastore user?&lt;/p></description></item><item><title>Redis Analysis - Part 1: Threading model</title><link>https://www.dragonflydb.io/blog/2021/12/09/single_threaded_redis/</link><pubDate>Thu, 09 Dec 2021 11:00:00 +0300</pubDate><guid>https://www.dragonflydb.io/blog/2021/12/09/single_threaded_redis/</guid><description>&lt;p>Following my previous post, we are going start with the &amp;ldquo;hottest potato&amp;rdquo; - single-threaded vs
multi-threaded argument.&lt;/p></description></item><item><title>A prelude to analysis of Redis memory-store</title><link>https://www.dragonflydb.io/blog/2021/11/28/redis_analysis/</link><pubDate>Sun, 28 Nov 2021 17:46:19 +0300</pubDate><guid>https://www.dragonflydb.io/blog/2021/11/28/redis_analysis/</guid><description>&lt;p>During the last 13 years, Redis has become a truly ubiquitous memory store that has won the hearts
of numerous dev-ops and software engineers. Indeed, according to &lt;a href="https://insights.stackoverflow.com/survey/2021#databases">StackOverflow survey in
2021&lt;/a>, Redis is the most loved database for the 5th time in a row and is at the top of
&lt;a href="https://db-engines.com/en/ranking/key-value+store">db-engines&lt;/a> ranking, way before the next contestant.
But how well does Redis utilizes modern hardware systems?
Will it stay competitive in a few years without reinventing itself?&lt;/p></description></item><item><title/><link>https://www.dragonflydb.io/privacy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.dragonflydb.io/privacy/</guid><description>Attos Privacy Policy Last Revised: May 30, 2022
Introduction Attos Technologies Ltd. (“Attos”, “we”, “us” or “our”) respects the privacy of its users (“User(s)”, “your” or “you”), and is committed to protecting the information that you share with us in connection with the use of and access to our website at [dragonflydb.</description></item><item><title>Dragonfly Business Source License 1.1</title><link>https://www.dragonflydb.io/license/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.dragonflydb.io/license/</guid><description>Dragonfly Business Source License 1.1
License: BSL 1.1
Licensor: Attos Technologies, Ltd.
Licensed Work: Dragonfly including the software components, or any portion of them, and any modification.
Change Date: June 1, 2027</description></item><item><title>FAQ</title><link>https://www.dragonflydb.io/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.dragonflydb.io/faq/</guid><description>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper.</description></item><item><title>Get Started</title><link>https://www.dragonflydb.io/get_started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.dragonflydb.io/get_started/</guid><description>Getting Started With Dragonfly Dragonfly is a modern in-memory datastore, fully compatible with Redis and Memcached APIs. Dragonfly implements novel algorithms and data structures on top of a multi-threaded, shared-nothing architecture.</description></item><item><title>Platform</title><link>https://www.dragonflydb.io/platform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.dragonflydb.io/platform/</guid><description>Getting Started With Dragonfly Dragonfly is a modern memory store compatible with Redis and Memcached APIs. Dragonfly&amp;rsquo;s noval architecture vertically scales to utlize all hardware resources and supports workloads of hundreds of GB of memory and millions of QPS from a single instance.</description></item></channel></rss>