<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Engineering on Dragonfly</title><link>https://www.dragonflydb.io/categories/engineering/</link><description>Recent content in Engineering on Dragonfly</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 30 Jan 2022 20:00:00 +0200</lastBuildDate><atom:link href="https://www.dragonflydb.io/categories/engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Redis Analysis - Part 2: Simplicity</title><link>https://www.dragonflydb.io/blog/2022/01/30/simple_is_beatiful/</link><pubDate>Sun, 30 Jan 2022 20:00:00 +0200</pubDate><guid>https://www.dragonflydb.io/blog/2022/01/30/simple_is_beatiful/</guid><description>&lt;p>Let&amp;rsquo;s talk about the simplicity of Redis.
Redis was initially designed as a simple store, and it seems that its APIs achieved this goal.
Unfortunately, Redis&amp;rsquo;s simple design makes it unreliable and difficult to manage in production.&lt;/p>
&lt;p>So the question is - what simplicity means to you as a datastore user?&lt;/p></description></item><item><title>Redis Analysis - Part 1: Threading model</title><link>https://www.dragonflydb.io/blog/2021/12/09/single_threaded_redis/</link><pubDate>Thu, 09 Dec 2021 11:00:00 +0300</pubDate><guid>https://www.dragonflydb.io/blog/2021/12/09/single_threaded_redis/</guid><description>&lt;p>Following my previous post, we are going start with the &amp;ldquo;hottest potato&amp;rdquo; - single-threaded vs
multi-threaded argument.&lt;/p></description></item><item><title>A prelude to analysis of Redis memory-store</title><link>https://www.dragonflydb.io/blog/2021/11/28/redis_analysis/</link><pubDate>Sun, 28 Nov 2021 17:46:19 +0300</pubDate><guid>https://www.dragonflydb.io/blog/2021/11/28/redis_analysis/</guid><description>&lt;p>During the last 13 years, Redis has become a truly ubiquitous memory store that has won the hearts
of numerous dev-ops and software engineers. Indeed, according to &lt;a href="https://insights.stackoverflow.com/survey/2021#databases">StackOverflow survey in
2021&lt;/a>, Redis is the most loved database for the 5th time in a row and is at the top of
&lt;a href="https://db-engines.com/en/ranking/key-value+store">db-engines&lt;/a> ranking, way before the next contestant.
But how well does Redis utilizes modern hardware systems?
Will it stay competitive in a few years without reinventing itself?&lt;/p></description></item></channel></rss>